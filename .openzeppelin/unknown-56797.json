{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x089630FFf732c1F0BE1A794B26C696d4c4b9cE73",
    "txHash": "0x515d56411fab91927f7c415a462636b7d24a4c41b96f2b79f1316583569241c1"
  },
  "proxies": [
    {
      "address": "0xd274C2225149724B7142f5d72F8c0eda48838DA4",
      "txHash": "0x00b18d969aea8dc8d1ad06963d689430a7bdb37ef542c293c612bc1c62d43c15",
      "kind": "transparent"
    },
    {
      "address": "0x9281fD776D35f518B877D726e6a30eff1c7775E9",
      "txHash": "0xe7a9dd49ce718d3d9fa5ac541c45341158afe2990b5bfcb58d5cbb593a8d2268",
      "kind": "transparent"
    },
    {
      "address": "0x6890fB0759730620D4987B14474c0445ee0cA465",
      "txHash": "0x399ded6ee0a47d09f7f6bdefddc581aa9bcaedea263c64300165e2ce8a69ee73",
      "kind": "transparent"
    },
    {
      "address": "0x20507b80c92d32DDfd733E81aF255b549421dfd8",
      "txHash": "0x8903072f9aa72dcf1849bd1a6f8843a13f6b319f772fae865fb910b8daab7484",
      "kind": "transparent"
    },
    {
      "address": "0x6974201EaAEb277888F6a4028d952E6A59F0baD1",
      "txHash": "0x2ff8072f515fe5a98749323f5f79691f98dc05ce29c1299cb6699f98beb851d2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "971af85ea8f0d9592a6609963741f4bfedf4784b75d4b8a7bd34e0400b9543f2": {
      "address": "0x179644e5E5466a599EE85419e91483C27ff1d9c3",
      "txHash": "0xeea6c66b85717ebf859e70725e5e518c1d6b940e0d0244f8a0dd80f43d2987ae",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "userInvitedNum",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:19"
          },
          {
            "label": "userInvitesMax",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:20"
          },
          {
            "label": "hashToOwner",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:25"
          },
          {
            "label": "hashToName",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:26"
          },
          {
            "label": "passInfo",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(PassInfo)5847_storage)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:27"
          },
          {
            "label": "passId",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(Counter)2643_storage",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:28"
          },
          {
            "label": "reserveNames",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:29"
          },
          {
            "label": "userActivated",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:30"
          },
          {
            "label": "hashToPass",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:31"
          },
          {
            "label": "doidRegistry",
            "offset": 0,
            "slot": "9",
            "type": "t_contract(IDoidRegistry)7255",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)40_storage",
            "contract": "PassRegistryStorage",
            "src": "contracts/PassRegistry.sol:41"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "50",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "50",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4293_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)40_storage": {
            "label": "uint256[40]",
            "numberOfBytes": "1280"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IDoidRegistry)7255": {
            "label": "contract IDoidRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4293_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(PassInfo)5847_storage)": {
            "label": "mapping(uint256 => struct PassRegistryStorage.PassInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4293_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3978_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2643_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PassInfo)5847_storage": {
            "label": "struct PassRegistryStorage.PassInfo",
            "members": [
              {
                "label": "passId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "passClass",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "passHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3978_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1241d6349075c273bc40dc017b79b9f41f34aa3c3712f5849bf262afcfe925a8": {
      "address": "0xEC1A3d9b5459286180A99c1d606796043e943074",
      "txHash": "0xf2501aa7117c06f324c5e9aa19e64b1b25ec0583b21e67cdb7cf46dbe8ba4e80",
      "layout": {
        "solcVersion": "0.8.4",
        "storage": [
          {
            "label": "passReg",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPassRegistry)5674",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:18"
          },
          {
            "label": "commitments",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:21"
          },
          {
            "label": "minCommitmentAge",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:22"
          },
          {
            "label": "maxCommitmentAge",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:23"
          },
          {
            "label": "names",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:25"
          },
          {
            "label": "IPNS",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:27"
          },
          {
            "label": "mainAddress",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:28"
          },
          {
            "label": "reverseNames",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "8",
            "type": "t_array(t_uint256)41_storage",
            "contract": "DoidRegistryStorage",
            "src": "contracts/DoidRegistry.sol:38"
          },
          {
            "label": "_addresses",
            "offset": 0,
            "slot": "49",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))",
            "contract": "AddressResolverStorage",
            "src": "contracts/resolvers/AddressResolver.sol:13"
          },
          {
            "label": "_nameTypes",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_bytes32,t_struct(UintSet)3797_storage)",
            "contract": "AddressResolverStorage",
            "src": "contracts/resolvers/AddressResolver.sol:14"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)48_storage",
            "contract": "AddressResolverStorage",
            "src": "contracts/resolvers/AddressResolver.sol:26"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "99",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "99",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "100",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "150",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "200",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "205",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "250",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]",
            "numberOfBytes": "1312"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IPassRegistry)5674": {
            "label": "contract IPassRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_bytes_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => bytes))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(UintSet)3797_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Set)3325_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)3797_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3325_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
